"Season Ticket Basketball"

REQUIREMENTS FOR 0.1 RELEASE:
resigning players at the end of the year
finance
    for each game:
        attendance: f(2*hometeamwinp + awayteamwinp)
        cost: team_salary/num_games_in_season
    finances tab - team | avg attendance | team payroll | revenue (YTD) | profit (YTD) | cash
            revenue = attendance * ticket_price + tv_money / num_games
            profit = revenue - SUM(cost)
negotiation window
    for resigning players and signing free agents
free agents
    team_id = -1
    if a team is over salary cap, they can only sign their own players and min contracts
uncertainty in rating - for each player, calculate a randn(0, 3) with max/min of +/- 5
    calculate a new one each year and add it to 1/2 of the previous one
trades
    if a team is over the salary cap, their incoming salary must be <= 125% their outgoing salary
    basic trade AI
the simulation should be stopped automatically before saving, trading, and negotiating contracts
some players (rookies mainly) have ratings higher than potentials - fix this (potentail should be set to overall)
are all imports necessary?

======
FUTURE
======

GAMESIM
-------
overtime
take all ratings into account

UI
--
view any team in the roster window
    drop down box at the top with team names
    all actions disabled unless team_id == common.PLAYER_TEAM_ID
    open this window when a team is double-clicked on in the standings
need a good way of updating windows (player, roster, etc.) on changes
    do this after getting a good general treeview system for updates
customize which columns are displayed in treeviews - kiwi
treeview formatting
    str, int, float, currency, date, age - do formatting based on column type
progress bars
combine ratings and stats tabs - use one model and just show different columns
filtering should be done with treemodelfilter - see pygtk tutorial
play menu
    even after hiding, accelerators still work, so on menuitem activation, check to make sure it's a valid choice!!!
        or: set accelerators in python code, not glade.  then i can reuse F12

NBA
---
real salary cap rules: http://en.wikipedia.org/wiki/NBA_Salary_Cap
real contract rules (max/min, etc.)
allow contracts that aren't the same $ every year
team and player options
releasing players - see the salary cap wiki page for complicated rule
luxury tax: (team_salary - 65mil) penalty if team salary is > 65mil

BACKEND
-------
archive stats as averages - this will make the end of season awards feasible, and make the stats view faster
    it will also allow computation of advanced stats (+/-, PER, etc)
look at conduit code for inspiration, particularly the DB stuff - Database.py and http://svn.gnome.org/viewvc/conduit/trunk/tools/test-db-wrapper/main.py?view=markup
psyco?
cython - rewrite parts as modules to make it faster?
parallelpython to parallelize game simulation

FEATURES
--------
injuries
opponent GM trade AI based on their team's status: contending or rebuilding
change prices of tickets, concessions, etc
hire coaches to influence development
different sized cities with differently passionate fanbases - affects attendance and home court advantage
playoffs

