when negotiating, players change values too much when you try to change years
when you press close and the save/nosave/cancel dialog comes up, it should warn you about the save if you press save


======
FUTURE
======

GAMESIM
-------
overtime
take all ratings into account
blocks, assists (maybe other things) should not be so evenly distributed
home and away games

UI
--
view any team in the roster window
    drop down box at the top with team names
    all actions disabled unless team_id == common.PLAYER_TEAM_ID
    open this window when a team is double-clicked on in the standings
need a good way of updating windows (player, roster, etc.) on changes
    do this after getting a good general treeview system for updates
    player/roster window should update after game played, player signed/released/drafted
customize which columns are displayed in treeviews - kiwi
treeview formatting
    str, int, float, currency, date, age - do formatting based on column type
progress bars
combine ratings and stats tabs - use one model and just show different columns
filtering should be done with treemodelfilter - see pygtk tutorial
play menu
    even after hiding, accelerators still work, so on menuitem activation, check to make sure it's a valid choice!!!
        or: set accelerators in python code, not glade.  then i can reuse accelerators
on new/open game:
    close all open dialogs/windows
    refresh all tabs of the main window

NBA
---
real salary cap rules: http://en.wikipedia.org/wiki/NBA_Salary_Cap
    released players should count against cap
real contract rules (max/min, etc.)
allow contracts that aren't the same $ every year
team and player options
releasing players - see the salary cap wiki page for complicated rule
luxury tax: (team_salary - 65mil) penalty if team salary is > 65mil

BACKEND
-------
archive stats as averages - this will make the end of season awards feasible, and make the stats view faster/easier
pyprocessing to parallelize game simulation - pyprocessing will be in python 2.6 as muiltiprocessing
uncertainty in rating - for each player, calculate a randn(0, 3) with max/min of +/- 5
    calculate a new one each year and add it to 1/2 of the previous one
teams should be smart in resigning players (now it's just random)
use constants for phase #'s, other things.  maybe create a dict CONST in common.py?

FEATURES
--------
injuries
opponent GM trade AI based on their team's status: contending or rebuilding
change prices of tickets, concessions, etc
hire coaches to influence development
different sized cities with differently passionate fanbases - affects attendance and home court advantage
playoffs
multi-team trades... how can i make a good UI for that?
advanced stats (+/-, PER, etc)
punishment for going in debt: if cash is less than $10M, can't sign any new contracts
